// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<RCTSafeAreaView
  style={
    {
      "backgroundColor": "rgb(245, 196, 249)",
      "flex": 1,
    }
  }
>
  <RCTScrollView
    data={
      [
        {
          "description": "This is recipe 1",
          "id": "1",
        },
        {
          "description": "This is recipe 2",
          "id": "2",
        },
        {
          "description": "This is recipe 3",
          "id": "3",
        },
        {
          "description": "This is recipe 1",
          "id": "1",
          "invisible": true,
        },
      ]
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={[]}
    style={
      {
        "flex": 1,
      }
    }
    viewabilityConfigCallbackPairs={[]}
  >
    <View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            [
              {
                "flexDirection": "row",
              },
              {
                "flex": 1,
                "height": 375,
                "justifyContent": "space-around",
                "marginVertical": 18.75,
              },
            ]
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "aspectRatio": 0.9,
                  "backgroundColor": "#CE88CB",
                  "borderRadius": 15,
                  "flexDirection": "column",
                  "justifyContent": "flex-end",
                }
              }
            >
              <Image
                source={1}
                style={
                  {
                    "borderRadius": 5,
                    "height": "70%",
                    "marginBottom": 8,
                    "width": "90%",
                  }
                }
              />
              <View
                style={
                  {
                    "height": "20%",
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "black",
                      "fontSize": 16,
                    }
                  }
                >
                  This is recipe 1
                </Text>
              </View>
            </View>
          </View>
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "aspectRatio": 0.9,
                  "backgroundColor": "#CE88CB",
                  "borderRadius": 15,
                  "flexDirection": "column",
                  "justifyContent": "flex-end",
                }
              }
            >
              <Image
                source={1}
                style={
                  {
                    "borderRadius": 5,
                    "height": "70%",
                    "marginBottom": 8,
                    "width": "90%",
                  }
                }
              />
              <View
                style={
                  {
                    "height": "20%",
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "black",
                      "fontSize": 16,
                    }
                  }
                >
                  This is recipe 2
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            [
              {
                "flexDirection": "row",
              },
              {
                "flex": 1,
                "height": 375,
                "justifyContent": "space-around",
                "marginVertical": 18.75,
              },
            ]
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "aspectRatio": 0.9,
                  "backgroundColor": "#CE88CB",
                  "borderRadius": 15,
                  "flexDirection": "column",
                  "justifyContent": "flex-end",
                }
              }
            >
              <Image
                source={1}
                style={
                  {
                    "borderRadius": 5,
                    "height": "70%",
                    "marginBottom": 8,
                    "width": "90%",
                  }
                }
              />
              <View
                style={
                  {
                    "height": "20%",
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "black",
                      "fontSize": 16,
                    }
                  }
                >
                  This is recipe 3
                </Text>
              </View>
            </View>
          </View>
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "aspectRatio": 0.9,
                  "backgroundColor": "#CE88CB",
                  "borderRadius": 15,
                  "flexDirection": "column",
                  "justifyContent": "flex-end",
                },
                {
                  "backgroundColor": "transparent",
                },
              ]
            }
          />
        </View>
      </View>
    </View>
  </RCTScrollView>
</RCTSafeAreaView>
`;
