// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    {
      "flex": 1,
      "flexDirection": "column",
    }
  }
>
  <View
    style={
      {
        "flex": 1,
        "paddingBottom": 50,
      }
    }
  >
    <View
      accessibilityIgnoresInvertColors={true}
      style={
        {
          "height": 444.6666666666667,
          "justifyContent": "flex-end",
          "width": 750,
        }
      }
    >
      <Image
        resizeMode="cover"
        source={1}
        style={
          [
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            {
              "height": 444.6666666666667,
              "width": 750,
            },
            undefined,
          ]
        }
      />
      <View
        style={
          {
            "flexDirection": "row",
            "justifyContent": "space-between",
            "padding": 10,
          }
        }
      >
        <Text
          style={
            {
              "color": "white",
              "fontSize": 30,
            }
          }
        >
          ------
        </Text>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={false}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "opacity": 1,
            }
          }
        >
          <Text />
        </View>
      </View>
    </View>
  </View>
  <View
    style={
      {
        "flex": 2,
        "flexDirection": "column",
      }
    }
  >
    <View
      style={
        {
          "flexDirection": "row",
          "justifyContent": "space-evenly",
        }
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 1,
          }
        }
      >
        <Text
          style={
            {
              "fontSize": 20,
            }
          }
        >
          Zutaten
        </Text>
      </View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 1,
          }
        }
      >
        <Text
          style={
            {
              "fontSize": 20,
            }
          }
        >
          Zubereitung
        </Text>
      </View>
    </View>
    <View>
      <View
        style={
          {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-evenly",
            "padding": 10,
          }
        }
      >
        <View
          style={
            {
              "padding": 5,
            }
          }
        >
          <Text />
          <Text>
            Portionen
          </Text>
        </View>
        <View
          style={
            {
              "padding": 5,
            }
          }
        >
          <Text />
          <Text>
            Zeit
          </Text>
        </View>
        <View
          style={
            {
              "padding": 5,
            }
          }
        >
          <Text />
        </View>
      </View>
      <View
        style={
          {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-evenly",
          }
        }
      >
        <Text
          style={
            {
              "fontSize": 20,
            }
          }
        >
          Kategorie:
        </Text>
        <TextInput
          placeholder="Kategorie"
          style={
            {
              "backgroundColor": "lightpink",
              "borderColor": "red",
              "borderRadius": 10,
              "borderWidth": 1,
              "fontSize": 15,
              "padding": 5,
            }
          }
        />
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={false}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "opacity": 1,
              "padding": 10,
            }
          }
        >
          <Text />
        </View>
      </View>
      <View
        style={
          {
            "padding": 20,
          }
        }
      >
        <Text
          style={
            {
              "fontSize": 20,
            }
          }
        >
          Zutaten
        </Text>
        <RCTSafeAreaView
          style={
            {
              "padding": 10,
            }
          }
        >
          <RCTScrollView>
            <View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={false}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "opacity": 1,
                    }
                  }
                >
                  <Text />
                </View>
                <TextInput
                  placeholder="Zutat hinzufÃ¼gen"
                  style={
                    {
                      "fontSize": 20,
                    }
                  }
                />
              </View>
            </View>
          </RCTScrollView>
        </RCTSafeAreaView>
      </View>
    </View>
  </View>
</View>
`;
