// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    {
      "flex": 1,
      "flexDirection": "column",
    }
  }
>
  <View
    style={
      {
        "flex": 1,
        "paddingBottom": 50,
      }
    }
  >
    <View
      accessibilityIgnoresInvertColors={true}
      style={
        {
          "height": 444.6666666666667,
          "justifyContent": "flex-end",
          "width": 750,
        }
      }
    >
      <Image
        resizeMode="cover"
        source={1}
        style={
          [
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            {
              "height": 444.6666666666667,
              "width": 750,
            },
            undefined,
          ]
        }
      />
      <View
        style={
          {
            "flexDirection": "row",
            "justifyContent": "space-between",
            "padding": 10,
          }
        }
      >
        <Text
          style={
            {
              "color": "white",
              "fontSize": 30,
            }
          }
        >
          ------
        </Text>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={false}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "opacity": 1,
            }
          }
        >
          <Text />
        </View>
      </View>
    </View>
  </View>
  <View
    style={
      {
        "flex": 2,
        "flexDirection": "column",
      }
    }
  >
    <View
      style={
        {
          "flexDirection": "row",
          "justifyContent": "space-evenly",
        }
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 1,
          }
        }
      >
        <Text
          style={
            {
              "fontSize": 20,
            }
          }
        >
          Zutaten
        </Text>
      </View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 1,
          }
        }
      >
        <Text
          style={
            {
              "fontSize": 20,
            }
          }
        >
          Zubereitung
        </Text>
      </View>
    </View>
    <View>
      <View
        style={
          {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-evenly",
            "padding": 10,
          }
        }
      >
        <View
          style={
            {
              "padding": 5,
            }
          }
        >
          <Text />
          <Text>
            Portionen
          </Text>
        </View>
        <View
          style={
            {
              "padding": 5,
            }
          }
        >
          <Text />
          <Text>
            Zeit
          </Text>
        </View>
        <View
          style={
            {
              "padding": 5,
            }
          }
        >
          <Text />
        </View>
      </View>
      <View
        style={
          {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-evenly",
          }
        }
      >
        <Text
          style={
            {
              "fontSize": 20,
            }
          }
        >
          Kategorie:
        </Text>
        <TextInput
          placeholder="Kategorie"
          style={
            {
              "backgroundColor": "lightpink",
              "borderColor": "red",
              "borderRadius": 10,
              "borderWidth": 1,
              "fontSize": 15,
              "padding": 5,
            }
          }
        />
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={false}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "opacity": 1,
              "padding": 10,
            }
          }
        >
          <Text />
        </View>
      </View>
      <View
        style={
          {
            "padding": 20,
          }
        }
      >
        <Text
          style={
            {
              "fontSize": 20,
            }
          }
        >
          Zutaten
        </Text>
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignContent": "center",
                "justifyContent": "center",
                "opacity": 1,
              }
            }
          >
            <Text />
          </View>
          <TextInput
            onChangeText={[Function]}
            placeholder="Zutat hinzufÃ¼gen"
            style={
              {
                "fontSize": 20,
                "textAlign": "center",
              }
            }
            value=""
          />
          <TextInput
            inputMode="numeric"
            onChangeText={[Function]}
            placeholder="Menge"
            style={
              {
                "fontSize": 20,
                "textAlign": "center",
              }
            }
          />
          <View
            style={
              {
                "height": 50,
                "width": 130,
              }
            }
          >
            <RNCPicker
              items={
                [
                  {
                    "label": "g",
                    "testID": undefined,
                    "textColor": undefined,
                    "value": "g",
                  },
                  {
                    "label": "kg",
                    "testID": undefined,
                    "textColor": undefined,
                    "value": "kg",
                  },
                  {
                    "label": "ml",
                    "testID": undefined,
                    "textColor": undefined,
                    "value": "ml",
                  },
                  {
                    "label": "L",
                    "testID": undefined,
                    "textColor": undefined,
                    "value": "L",
                  },
                  {
                    "label": "Stk",
                    "testID": undefined,
                    "textColor": undefined,
                    "value": "Stk",
                  },
                  {
                    "label": "TL",
                    "testID": undefined,
                    "textColor": undefined,
                    "value": "TL",
                  },
                  {
                    "label": "EL",
                    "testID": undefined,
                    "textColor": undefined,
                    "value": "EL",
                  },
                  {
                    "label": "Prise",
                    "testID": undefined,
                    "textColor": undefined,
                    "value": "Prise",
                  },
                  {
                    "label": "Msp",
                    "testID": undefined,
                    "textColor": undefined,
                    "value": "Msp",
                  },
                  {
                    "label": "Bund",
                    "testID": undefined,
                    "textColor": undefined,
                    "value": "Bund",
                  },
                  {
                    "label": "Packung",
                    "testID": undefined,
                    "textColor": undefined,
                    "value": "Packung",
                  },
                  {
                    "label": "Dose",
                    "testID": undefined,
                    "textColor": undefined,
                    "value": "Dose",
                  },
                  {
                    "label": "Becher",
                    "testID": undefined,
                    "textColor": undefined,
                    "value": "Becher",
                  },
                  {
                    "label": "Tasse",
                    "testID": undefined,
                    "textColor": undefined,
                    "value": "Tasse",
                  },
                  {
                    "label": "Glas",
                    "testID": undefined,
                    "textColor": undefined,
                    "value": "Glas",
                  },
                  {
                    "label": "Flasche",
                    "testID": undefined,
                    "textColor": undefined,
                    "value": "Flasche",
                  },
                  {
                    "label": "Scheibe",
                    "testID": undefined,
                    "textColor": undefined,
                    "value": "Scheibe",
                  },
                ]
              }
              numberOfLines={1}
              onChange={[Function]}
              selectedIndex={0}
              style={
                [
                  {
                    "height": 216,
                  },
                  undefined,
                ]
              }
            />
          </View>
        </View>
        <View>
          <RCTSafeAreaView
            style={
              {
                "height": 180,
                "padding": 10,
              }
            }
          >
            <RCTScrollView
              contentContainerStyle={
                {
                  "marginBottom": 5,
                }
              }
              style={
                {
                  "paddingBottom": 5,
                }
              }
            >
              <View />
            </RCTScrollView>
          </RCTSafeAreaView>
        </View>
      </View>
    </View>
  </View>
  <View
    style={
      {
        "alignItems": "center",
        "backgroundColor": "pink",
        "flex": 0.2,
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingLeft": 10,
      }
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
    >
      <Text />
    </View>
    <Text
      style={
        {
          "fontSize": 20,
        }
      }
    >
      Edit Mode
    </Text>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
    >
      <Text />
    </View>
  </View>
</View>
`;
